"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[568],{47575:function(e,t,s){s.d(t,{Kj:function(){return T},gW:function(){return P}});var i=s(18139),r=s(88658),a=s(55655),n=s(94104),o=s(40140),l=s(34515),h=s(50147),d=s(25412),c=s(42922),u=s(56387),f=s(82186),g=s(12341),_=s(84106),m=s(95068),I=s(14735),M=s(18894),p=s(88058),v=s(5458),D=s(88137),y=s(30658),b=s(70646),S=s(59069),x=s(14559),B=s(11298);class P{}class A{constructor(){this.visibleInstances={},this.batchCache=new O,this.batchCacheReplacementModeInFrozenMode=new O,this.instancesBufferSize=2048}}class O{constructor(){this.mustReturn=!1,this.visibleInstances=[],this.renderSelf=[],this.hardwareInstancedRendering=[]}}class C{constructor(){this.instancesCount=0,this.matrixBuffer=null,this.previousMatrixBuffer=null,this.matrixBufferSize=512,this.matrixData=null,this.boundingVectors=[],this.worldMatrices=null}}class F{constructor(){this._areNormalsFrozen=!1,this._source=null,this.meshMap=null,this._preActivateId=-1,this._LODLevels=[],this._useLODScreenCoverage=!1,this._effectiveMaterial=null,this._forcedInstanceCount=0,this._overrideRenderingFillMode=null}}class T extends m.x{static _GetDefaultSideOrientation(e){return e||T.FRONTSIDE}get useLODScreenCoverage(){return this._internalMeshDataInfo._useLODScreenCoverage}set useLODScreenCoverage(e){this._internalMeshDataInfo._useLODScreenCoverage=e,this._sortLODLevels()}get computeBonesUsingShaders(){return this._internalAbstractMeshDataInfo._computeBonesUsingShaders}set computeBonesUsingShaders(e){this._internalAbstractMeshDataInfo._computeBonesUsingShaders!==e&&(e&&this._internalMeshDataInfo._sourcePositions&&(this.setVerticesData(f.o.PositionKind,this._internalMeshDataInfo._sourcePositions,!0),this._internalMeshDataInfo._sourceNormals&&this.setVerticesData(f.o.NormalKind,this._internalMeshDataInfo._sourceNormals,!0),this._internalMeshDataInfo._sourcePositions=null,this._internalMeshDataInfo._sourceNormals=null),this._internalAbstractMeshDataInfo._computeBonesUsingShaders=e,this._markSubMeshesAsAttributesDirty())}get onBeforeRenderObservable(){return this._internalMeshDataInfo._onBeforeRenderObservable||(this._internalMeshDataInfo._onBeforeRenderObservable=new i.y$),this._internalMeshDataInfo._onBeforeRenderObservable}get onBeforeBindObservable(){return this._internalMeshDataInfo._onBeforeBindObservable||(this._internalMeshDataInfo._onBeforeBindObservable=new i.y$),this._internalMeshDataInfo._onBeforeBindObservable}get onAfterRenderObservable(){return this._internalMeshDataInfo._onAfterRenderObservable||(this._internalMeshDataInfo._onAfterRenderObservable=new i.y$),this._internalMeshDataInfo._onAfterRenderObservable}get onBetweenPassObservable(){return this._internalMeshDataInfo._onBetweenPassObservable||(this._internalMeshDataInfo._onBetweenPassObservable=new i.y$),this._internalMeshDataInfo._onBetweenPassObservable}get onBeforeDrawObservable(){return this._internalMeshDataInfo._onBeforeDrawObservable||(this._internalMeshDataInfo._onBeforeDrawObservable=new i.y$),this._internalMeshDataInfo._onBeforeDrawObservable}set onBeforeDraw(e){this._onBeforeDrawObserver&&this.onBeforeDrawObservable.remove(this._onBeforeDrawObserver),this._onBeforeDrawObserver=this.onBeforeDrawObservable.add(e)}get hasInstances(){return this.instances.length>0}get hasThinInstances(){var e;return(null!==(e=this._thinInstanceDataStorage.instancesCount)&&void 0!==e?e:0)>0}get forcedInstanceCount(){return this._internalMeshDataInfo._forcedInstanceCount}set forcedInstanceCount(e){this._internalMeshDataInfo._forcedInstanceCount=e}get overrideRenderingFillMode(){return this._internalMeshDataInfo._overrideRenderingFillMode}set overrideRenderingFillMode(e){this._internalMeshDataInfo._overrideRenderingFillMode=e}get source(){return this._internalMeshDataInfo._source}get cloneMeshMap(){return this._internalMeshDataInfo.meshMap}get isUnIndexed(){return this._unIndexed}set isUnIndexed(e){this._unIndexed!==e&&(this._unIndexed=e,this._markSubMeshesAsAttributesDirty())}get worldMatrixInstancedBuffer(){return this._instanceDataStorage.instancesData}get previousWorldMatrixInstancedBuffer(){return this._instanceDataStorage.instancesPreviousData}get manualUpdateOfWorldMatrixInstancedBuffer(){return this._instanceDataStorage.manualUpdate}set manualUpdateOfWorldMatrixInstancedBuffer(e){this._instanceDataStorage.manualUpdate=e}get manualUpdateOfPreviousWorldMatrixInstancedBuffer(){return this._instanceDataStorage.previousManualUpdate}set manualUpdateOfPreviousWorldMatrixInstancedBuffer(e){this._instanceDataStorage.previousManualUpdate=e}get forceWorldMatrixInstancedBufferUpdate(){return this._instanceDataStorage.forceMatrixUpdates}set forceWorldMatrixInstancedBufferUpdate(e){this._instanceDataStorage.forceMatrixUpdates=e}constructor(e,t=null,s=null,r=null,o,l=!0){if(super(e,t),this._internalMeshDataInfo=new F,this.delayLoadState=0,this.instances=[],this._creationDataStorage=null,this._geometry=null,this._instanceDataStorage=new A,this._thinInstanceDataStorage=new C,this._shouldGenerateFlatShading=!1,this._originalBuilderSideOrientation=T.DEFAULTSIDE,this.overrideMaterialSideOrientation=null,this.ignoreCameraMaxZ=!1,t=this.getScene(),this._onBeforeDraw=(e,t,s)=>{e&&s&&(this._uniformBuffer?this.transferToEffect(t):s.bindOnlyWorldMatrix(t))},r){if(r._geometry&&r._geometry.applyToMesh(this),a.j.DeepCopy(r,this,["name","material","skeleton","instances","parent","uniqueId","source","metadata","morphTargetManager","hasInstances","worldMatrixInstancedBuffer","previousWorldMatrixInstancedBuffer","hasLODLevels","geometry","isBlocked","areNormalsFrozen","facetNb","isFacetDataEnabled","lightSources","useBones","isAnInstance","collider","edgesRenderer","forward","up","right","absolutePosition","absoluteScaling","absoluteRotationQuaternion","isWorldMatrixFrozen","nonUniformScaling","behaviors","worldMatrixFromCache","hasThinInstances","cloneMeshMap","hasBoundingInfo"],["_poseMatrix"]),this._internalMeshDataInfo._source=r,t.useClonedMeshMap&&(r._internalMeshDataInfo.meshMap||(r._internalMeshDataInfo.meshMap={}),r._internalMeshDataInfo.meshMap[this.uniqueId]=this),this._originalBuilderSideOrientation=r._originalBuilderSideOrientation,this._creationDataStorage=r._creationDataStorage,r._ranges){let e=r._ranges;for(let t in e)Object.prototype.hasOwnProperty.call(e,t)&&e[t]&&this.createAnimationRange(t,e[t].from,e[t].to)}if(r.metadata&&r.metadata.clone?this.metadata=r.metadata.clone():this.metadata=r.metadata,this._internalMetadata=r._internalMetadata,n.$&&n.$.HasTags(r)&&n.$.AddTagsTo(this,n.$.GetTags(r,!0)),this.setEnabled(r.isEnabled(!1)),this.parent=r.parent,this.setPivotMatrix(r.getPivotMatrix()),this.id=e+"."+r.id,this.material=r.material,!o){let t=r.getDescendants(!0);for(let s=0;s<t.length;s++){let i=t[s];i.clone&&i.clone(e+"."+i.name,this)}}if(r.morphTargetManager&&(this.morphTargetManager=r.morphTargetManager),t.getPhysicsEngine){let e=t.getPhysicsEngine();if(l&&e){if(1===e.getPluginVersion()){let t=e.getImpostorForPhysicsObject(r);t&&(this.physicsImpostor=t.clone(this))}else 2===e.getPluginVersion()&&r.physicsBody&&r.physicsBody.clone(this)}}for(let e=0;e<t.particleSystems.length;e++){let s=t.particleSystems[e];s.emitter===r&&s.clone(s.name,this)}this.skeleton=r.skeleton,this.refreshBoundingInfo(!0,!0),this.computeWorldMatrix(!0)}null!==s&&(this.parent=s),this._instanceDataStorage.hardwareInstancedRendering=this.getEngine().getCaps().instancedArrays,this._internalMeshDataInfo._onMeshReadyObserverAdded=e=>{e.unregisterOnNextCall=!0,this.isReady(!0)?this.onMeshReadyObservable.notifyObservers(this):this._internalMeshDataInfo._checkReadinessObserver||(this._internalMeshDataInfo._checkReadinessObserver=this._scene.onBeforeRenderObservable.add(()=>{this.isReady(!0)&&(this._scene.onBeforeRenderObservable.remove(this._internalMeshDataInfo._checkReadinessObserver),this._internalMeshDataInfo._checkReadinessObserver=null,this.onMeshReadyObservable.notifyObservers(this))}))},this.onMeshReadyObservable=new i.y$(this._internalMeshDataInfo._onMeshReadyObserverAdded),r&&r.onClonedObservable.notifyObservers(this)}instantiateHierarchy(e=null,t,s){let i=0===this.getTotalVertices()||t&&t.doNotInstantiate&&(!0===t.doNotInstantiate||t.doNotInstantiate(this))?this.clone("Clone of "+(this.name||this.id),e||this.parent,!0):this.createInstance("instance of "+(this.name||this.id));for(let r of(i.parent=e||this.parent,i.position=this.position.clone(),i.scaling=this.scaling.clone(),this.rotationQuaternion?i.rotationQuaternion=this.rotationQuaternion.clone():i.rotation=this.rotation.clone(),s&&s(this,i),this.getChildTransformNodes(!0)))"InstancedMesh"===r.getClassName()&&"Mesh"===i.getClassName()&&r.sourceMesh===this?r.instantiateHierarchy(i,{doNotInstantiate:t&&t.doNotInstantiate||!1,newSourcedMesh:i},s):r.instantiateHierarchy(i,t,s);return i}getClassName(){return"Mesh"}get _isMesh(){return!0}toString(e){let t=super.toString(e);if(t+=", n vertices: "+this.getTotalVertices()+", parent: "+(this._waitingParentId?this._waitingParentId:this.parent?this.parent.name:"NONE"),this.animations)for(let s=0;s<this.animations.length;s++)t+=", animation[0]: "+this.animations[s].toString(e);if(e){if(this._geometry){let e=this.getIndices(),s=this.getVerticesData(f.o.PositionKind);s&&e&&(t+=", flat shading: "+(s.length/3===e.length?"YES":"NO"))}else t+=", flat shading: UNKNOWN"}return t}_unBindEffect(){for(let e of(super._unBindEffect(),this.instances))e._unBindEffect()}get hasLODLevels(){return this._internalMeshDataInfo._LODLevels.length>0}getLODLevels(){return this._internalMeshDataInfo._LODLevels}_sortLODLevels(){let e=this._internalMeshDataInfo._useLODScreenCoverage?-1:1;this._internalMeshDataInfo._LODLevels.sort((t,s)=>t.distanceOrScreenCoverage<s.distanceOrScreenCoverage?e:t.distanceOrScreenCoverage>s.distanceOrScreenCoverage?-e:0)}addLODLevel(e,t){if(t&&t._masterMesh)return y.Y.Warn("You cannot use a mesh as LOD level twice"),this;let s=new B.g(e,t);return this._internalMeshDataInfo._LODLevels.push(s),t&&(t._masterMesh=this),this._sortLODLevels(),this}getLODLevelAtDistance(e){let t=this._internalMeshDataInfo;for(let s=0;s<t._LODLevels.length;s++){let i=t._LODLevels[s];if(i.distanceOrScreenCoverage===e)return i.mesh}return null}removeLODLevel(e){let t=this._internalMeshDataInfo;for(let s=0;s<t._LODLevels.length;s++)t._LODLevels[s].mesh===e&&(t._LODLevels.splice(s,1),e&&(e._masterMesh=null));return this._sortLODLevels(),this}getLOD(e,t){let s=this._internalMeshDataInfo;if(!s._LODLevels||0===s._LODLevels.length)return this;let i=t||this.getBoundingInfo().boundingSphere,r=e.mode===l.V.ORTHOGRAPHIC_CAMERA?e.minZ:i.centerWorld.subtract(e.globalPosition).length(),a=r,n=1;if(s._useLODScreenCoverage){let t=e.screenArea,s=i.radiusWorld*e.minZ/r;a=(s=s*s*Math.PI)/t,n=-1}if(n*s._LODLevels[s._LODLevels.length-1].distanceOrScreenCoverage>n*a)return this.onLODLevelSelection&&this.onLODLevelSelection(a,this,this),this;for(let e=0;e<s._LODLevels.length;e++){let t=s._LODLevels[e];if(n*t.distanceOrScreenCoverage<n*a){if(t.mesh){if(4===t.mesh.delayLoadState)return t.mesh._checkDelayState(),this;if(2===t.mesh.delayLoadState)return this;t.mesh._preActivate(),t.mesh._updateSubMeshesBoundingInfo(this.worldMatrixFromCache)}return this.onLODLevelSelection&&this.onLODLevelSelection(a,this,t.mesh),t.mesh}}return this.onLODLevelSelection&&this.onLODLevelSelection(a,this,this),this}get geometry(){return this._geometry}getTotalVertices(){return null===this._geometry||void 0===this._geometry?0:this._geometry.getTotalVertices()}getVerticesData(e,t,s,i){var r,a;if(!this._geometry)return null;let n=i?void 0:null===(a=null===(r=this._userInstancedBuffersStorage)||void 0===r?void 0:r.vertexBuffers[e])||void 0===a?void 0:a.getFloatData(this.instances.length+1,s||t&&1!==this._geometry.meshes.length);return n||(n=this._geometry.getVerticesData(e,t,s)),n}getVertexBuffer(e,t){var s,i;return this._geometry?null!==(i=t?void 0:null===(s=this._userInstancedBuffersStorage)||void 0===s?void 0:s.vertexBuffers[e])&&void 0!==i?i:this._geometry.getVertexBuffer(e):null}isVerticesDataPresent(e,t){var s;return this._geometry?!t&&(null===(s=this._userInstancedBuffersStorage)||void 0===s?void 0:s.vertexBuffers[e])!==void 0||this._geometry.isVerticesDataPresent(e):!!this._delayInfo&&-1!==this._delayInfo.indexOf(e)}isVertexBufferUpdatable(e,t){var s;if(!this._geometry)return!!this._delayInfo&&-1!==this._delayInfo.indexOf(e);if(!t){let t=null===(s=this._userInstancedBuffersStorage)||void 0===s?void 0:s.vertexBuffers[e];if(t)return t.isUpdatable()}return this._geometry.isVertexBufferUpdatable(e)}getVerticesDataKinds(e){if(!this._geometry){let e=[];return this._delayInfo&&this._delayInfo.forEach(function(t){e.push(t)}),e}let t=this._geometry.getVerticesDataKinds();if(!e&&this._userInstancedBuffersStorage)for(let e in this._userInstancedBuffersStorage.vertexBuffers)-1===t.indexOf(e)&&t.push(e);return t}getTotalIndices(){return this._geometry?this._geometry.getTotalIndices():0}getIndices(e,t){return this._geometry?this._geometry.getIndices(e,t):[]}get isBlocked(){return null!==this._masterMesh&&void 0!==this._masterMesh}isReady(e=!1,t=!1){var s,i,r,a,n,o;if(2===this.delayLoadState||!super.isReady(e))return!1;if(!this.subMeshes||0===this.subMeshes.length||!e)return!0;let l=this.getEngine(),h=this.getScene(),d=t||l.getCaps().instancedArrays&&(this.instances.length>0||this.hasThinInstances);this.computeWorldMatrix();let c=this.material||h.defaultMaterial;if(c){if(c._storeEffectOnSubMeshes)for(let e of this.subMeshes){let t=e.getMaterial();if(t){if(t._storeEffectOnSubMeshes){if(!t.isReadyForSubMesh(this,e,d))return!1}else if(!t.isReady(this,d))return!1}}else if(!c.isReady(this,d))return!1}let u=l.currentRenderPassId;for(let e of this.lightSources){let t=e.getShadowGenerators();if(!t)continue;let h=t.values();for(let e=h.next();!0!==e.done;e=h.next()){let t=e.value;if(t&&(!(null===(s=t.getShadowMap())||void 0===s?void 0:s.renderList)||(null===(i=t.getShadowMap())||void 0===i?void 0:i.renderList)&&(null===(a=null===(r=t.getShadowMap())||void 0===r?void 0:r.renderList)||void 0===a?void 0:a.indexOf(this))!==-1)){for(let e of(t.getShadowMap()&&(l.currentRenderPassId=t.getShadowMap().renderPassId),this.subMeshes))if(!t.isReady(e,d,null!==(o=null===(n=e.getMaterial())||void 0===n?void 0:n.needAlphaBlendingForMesh(this))&&void 0!==o&&o))return l.currentRenderPassId=u,!1;l.currentRenderPassId=u}}}for(let e of this._internalMeshDataInfo._LODLevels)if(e.mesh&&!e.mesh.isReady(d))return!1;return!0}get areNormalsFrozen(){return this._internalMeshDataInfo._areNormalsFrozen}freezeNormals(){return this._internalMeshDataInfo._areNormalsFrozen=!0,this}unfreezeNormals(){return this._internalMeshDataInfo._areNormalsFrozen=!1,this}set overridenInstanceCount(e){this._instanceDataStorage.overridenInstanceCount=e}_preActivate(){let e=this._internalMeshDataInfo,t=this.getScene().getRenderId();return e._preActivateId===t||(e._preActivateId=t,this._instanceDataStorage.visibleInstances=null),this}_preActivateForIntermediateRendering(e){return this._instanceDataStorage.visibleInstances&&(this._instanceDataStorage.visibleInstances.intermediateDefaultRenderId=e),this}_registerInstanceForRenderId(e,t){return this._instanceDataStorage.visibleInstances||(this._instanceDataStorage.visibleInstances={defaultRenderId:t,selfDefaultRenderId:this._renderId}),this._instanceDataStorage.visibleInstances[t]||(void 0!==this._instanceDataStorage.previousRenderId&&this._instanceDataStorage.isFrozen&&(this._instanceDataStorage.visibleInstances[this._instanceDataStorage.previousRenderId]=null),this._instanceDataStorage.previousRenderId=t,this._instanceDataStorage.visibleInstances[t]=[]),this._instanceDataStorage.visibleInstances[t].push(e),this}_afterComputeWorldMatrix(){super._afterComputeWorldMatrix(),this.hasThinInstances&&(this.doNotSyncBoundingInfo||this.thinInstanceRefreshBoundingInfo(!1))}_postActivate(){this.edgesShareWithInstances&&this.edgesRenderer&&this.edgesRenderer.isEnabled&&this._renderingGroup&&(this._renderingGroup._edgesRenderers.pushNoDuplicate(this.edgesRenderer),this.edgesRenderer.customInstances.push(this.getWorldMatrix()))}refreshBoundingInfo(e=!1,t=!1){if(this.hasBoundingInfo&&this.getBoundingInfo().isLocked)return this;let s=this.geometry?this.geometry.boundingBias:null;return this._refreshBoundingInfo(this._getPositionData(e,t),s),this}_createGlobalSubMesh(e){let t=this.getTotalVertices();if(!t||!this.getIndices())return null;if(this.subMeshes&&this.subMeshes.length>0){let s=this.getIndices();if(!s)return null;let i=s.length,r=!1;if(e)r=!0;else for(let e of this.subMeshes)if(e.indexStart+e.indexCount>i||e.verticesStart+e.verticesCount>t){r=!0;break}if(!r)return this.subMeshes[0]}return this.releaseSubMeshes(),new I.P(0,0,t,0,this.getTotalIndices(),this)}subdivide(e){if(e<1)return;let t=this.getTotalIndices(),s=t/e|0,i=0;for(;s%3!=0;)s++;this.releaseSubMeshes();for(let r=0;r<e&&!(i>=t);r++)I.P.CreateFromIndices(0,i,r===e-1?t-i:s,this),i+=s;this.synchronizeInstances()}setVerticesData(e,t,s=!1,i){if(this._geometry)this._geometry.setVerticesData(e,t,s,i);else{let i=new g.x;i.set(t,e);let r=this.getScene();new _.Z(_.Z.RandomId(),r,i,s,this)}return this}removeVerticesData(e){this._geometry&&this._geometry.removeVerticesData(e)}markVerticesDataAsUpdatable(e,t=!0){let s=this.getVertexBuffer(e);s&&s.isUpdatable()!==t&&this.setVerticesData(e,this.getVerticesData(e),t)}setVerticesBuffer(e,t=!0){return this._geometry||(this._geometry=_.Z.CreateGeometryForMesh(this)),this._geometry.setVerticesBuffer(e,null,t),this}updateVerticesData(e,t,s,i){return this._geometry&&(i?(this.makeGeometryUnique(),this.updateVerticesData(e,t,s,!1)):this._geometry.updateVerticesData(e,t,s)),this}updateMeshPositions(e,t=!0){let s=this.getVerticesData(f.o.PositionKind);if(!s)return this;if(e(s),this.updateVerticesData(f.o.PositionKind,s,!1,!1),t){let e=this.getIndices(),t=this.getVerticesData(f.o.NormalKind);if(!t)return this;g.x.ComputeNormals(s,e,t),this.updateVerticesData(f.o.NormalKind,t,!1,!1)}return this}makeGeometryUnique(){if(!this._geometry||1===this._geometry.meshes.length)return this;let e=this._geometry,t=this._geometry.copy(_.Z.RandomId());return e.releaseForMesh(this,!0),t.applyToMesh(this),this}setIndices(e,t=null,s=!1){if(this._geometry)this._geometry.setIndices(e,t,s);else{let t=new g.x;t.indices=e;let i=this.getScene();new _.Z(_.Z.RandomId(),i,t,s,this)}return this}updateIndices(e,t,s=!1){return this._geometry&&this._geometry.updateIndices(e,t,s),this}toLeftHanded(){return this._geometry&&this._geometry.toLeftHanded(),this}_bind(e,t,s,i=!0){let r;if(!this._geometry)return this;let a=this.getScene().getEngine();if(this.morphTargetManager&&this.morphTargetManager.isUsingTextureForTargets&&this.morphTargetManager._bind(t),this._unIndexed)r=null;else switch(this._getRenderingFillMode(s)){case M.F.PointFillMode:r=null;break;case M.F.WireFrameFillMode:r=e._getLinesIndexBuffer(this.getIndices(),a);break;default:case M.F.TriangleFillMode:r=this._geometry.getIndexBuffer()}return i&&this._userInstancedBuffersStorage&&!this.hasThinInstances?this._geometry._bind(t,r,this._userInstancedBuffersStorage.vertexBuffers,this._userInstancedBuffersStorage.vertexArrayObjects):this._geometry._bind(t,r),this}_draw(e,t,s){if(!this._geometry||!this._geometry.getVertexBuffers()||!this._unIndexed&&!this._geometry.getIndexBuffer())return this;this._internalMeshDataInfo._onBeforeDrawObservable&&this._internalMeshDataInfo._onBeforeDrawObservable.notifyObservers(this);let i=this.getScene(),r=i.getEngine();return this._unIndexed||t==M.F.PointFillMode?r.drawArraysType(t,e.verticesStart,e.verticesCount,this.forcedInstanceCount||s):t==M.F.WireFrameFillMode?r.drawElementsType(t,0,e._linesIndexCount,this.forcedInstanceCount||s):r.drawElementsType(t,e.indexStart,e.indexCount,this.forcedInstanceCount||s),this}registerBeforeRender(e){return this.onBeforeRenderObservable.add(e),this}unregisterBeforeRender(e){return this.onBeforeRenderObservable.removeCallback(e),this}registerAfterRender(e){return this.onAfterRenderObservable.add(e),this}unregisterAfterRender(e){return this.onAfterRenderObservable.removeCallback(e),this}_getInstancesRenderList(e,t=!1){if(this._instanceDataStorage.isFrozen){if(t)return this._instanceDataStorage.batchCacheReplacementModeInFrozenMode.hardwareInstancedRendering[e]=!1,this._instanceDataStorage.batchCacheReplacementModeInFrozenMode.renderSelf[e]=!0,this._instanceDataStorage.batchCacheReplacementModeInFrozenMode;if(this._instanceDataStorage.previousBatch)return this._instanceDataStorage.previousBatch}let s=this.getScene(),i=s._isInIntermediateRendering(),r=i?this._internalAbstractMeshDataInfo._onlyForInstancesIntermediate:this._internalAbstractMeshDataInfo._onlyForInstances,a=this._instanceDataStorage.batchCache;if(a.mustReturn=!1,a.renderSelf[e]=t||!r&&this.isEnabled()&&this.isVisible,a.visibleInstances[e]=null,this._instanceDataStorage.visibleInstances&&!t){let t=this._instanceDataStorage.visibleInstances,r=s.getRenderId(),n=i?t.intermediateDefaultRenderId:t.defaultRenderId;a.visibleInstances[e]=t[r],!a.visibleInstances[e]&&n&&(a.visibleInstances[e]=t[n])}return a.hardwareInstancedRendering[e]=!t&&this._instanceDataStorage.hardwareInstancedRendering&&null!==a.visibleInstances[e]&&void 0!==a.visibleInstances[e],this._instanceDataStorage.previousBatch=a,a}_renderWithInstances(e,t,s,i,r){var a;let n=s.visibleInstances[e._id],o=n?n.length:0,l=this._instanceDataStorage,h=l.instancesBufferSize,c=l.instancesBuffer,u=l.instancesPreviousBuffer,g=64*(o+1);for(;l.instancesBufferSize<g;)l.instancesBufferSize*=2;l.instancesData&&h==l.instancesBufferSize||(l.instancesData=new Float32Array(l.instancesBufferSize/4)),(this._scene.needsPreviousWorldMatrices&&!l.instancesPreviousData||h!=l.instancesBufferSize)&&(l.instancesPreviousData=new Float32Array(l.instancesBufferSize/4));let _=0,m=0,I=s.renderSelf[e._id],M=!c||h!==l.instancesBufferSize||this._scene.needsPreviousWorldMatrices&&!l.instancesPreviousBuffer;if(this._instanceDataStorage.manualUpdate||l.isFrozen&&!M)m=(I?1:0)+o;else{let t=this.getWorldMatrix();if(I&&(this._scene.needsPreviousWorldMatrices&&(l.masterMeshPreviousWorldMatrix?(l.masterMeshPreviousWorldMatrix.copyToArray(l.instancesPreviousData,_),l.masterMeshPreviousWorldMatrix.copyFrom(t)):(l.masterMeshPreviousWorldMatrix=t.clone(),l.masterMeshPreviousWorldMatrix.copyToArray(l.instancesPreviousData,_))),t.copyToArray(l.instancesData,_),_+=16,m++),n){if(T.INSTANCEDMESH_SORT_TRANSPARENT&&this._scene.activeCamera&&(null===(a=e.getMaterial())||void 0===a?void 0:a.needAlphaBlendingForMesh(e.getRenderingMesh()))){let e=this._scene.activeCamera.globalPosition;for(let t=0;t<n.length;t++){let s=n[t];s._distanceToCamera=d.P.Distance(s.getBoundingInfo().boundingSphere.centerWorld,e)}n.sort((e,t)=>e._distanceToCamera>t._distanceToCamera?-1:e._distanceToCamera<t._distanceToCamera?1:0)}for(let e=0;e<n.length;e++){let t=n[e],s=t.getWorldMatrix();s.copyToArray(l.instancesData,_),this._scene.needsPreviousWorldMatrices&&(t._previousWorldMatrix?(t._previousWorldMatrix.copyToArray(l.instancesPreviousData,_),t._previousWorldMatrix.copyFrom(s)):(t._previousWorldMatrix=s.clone(),t._previousWorldMatrix.copyToArray(l.instancesPreviousData,_))),_+=16,m++}}}return M?(c&&c.dispose(),u&&u.dispose(),c=new f.l(r,l.instancesData,!0,16,!1,!0),l.instancesBuffer=c,this._userInstancedBuffersStorage||(this._userInstancedBuffersStorage={data:{},vertexBuffers:{},strides:{},sizes:{},vertexArrayObjects:this.getEngine().getCaps().vertexArrayObject?{}:void 0}),this._userInstancedBuffersStorage.vertexBuffers.world0=c.createVertexBuffer("world0",0,4),this._userInstancedBuffersStorage.vertexBuffers.world1=c.createVertexBuffer("world1",4,4),this._userInstancedBuffersStorage.vertexBuffers.world2=c.createVertexBuffer("world2",8,4),this._userInstancedBuffersStorage.vertexBuffers.world3=c.createVertexBuffer("world3",12,4),this._scene.needsPreviousWorldMatrices&&(u=new f.l(r,l.instancesPreviousData,!0,16,!1,!0),l.instancesPreviousBuffer=u,this._userInstancedBuffersStorage.vertexBuffers.previousWorld0=u.createVertexBuffer("previousWorld0",0,4),this._userInstancedBuffersStorage.vertexBuffers.previousWorld1=u.createVertexBuffer("previousWorld1",4,4),this._userInstancedBuffersStorage.vertexBuffers.previousWorld2=u.createVertexBuffer("previousWorld2",8,4),this._userInstancedBuffersStorage.vertexBuffers.previousWorld3=u.createVertexBuffer("previousWorld3",12,4)),this._invalidateInstanceVertexArrayObject()):(!this._instanceDataStorage.isFrozen||this._instanceDataStorage.forceMatrixUpdates)&&(c.updateDirectly(l.instancesData,0,m),this._scene.needsPreviousWorldMatrices&&(!this._instanceDataStorage.manualUpdate||this._instanceDataStorage.previousManualUpdate)&&u.updateDirectly(l.instancesPreviousData,0,m)),this._processInstancedBuffers(n,I),this.getScene()._activeIndices.addCount(e.indexCount*m,!1),r._currentDrawContext&&(r._currentDrawContext.useInstancing=!0),this._bind(e,i,t),this._draw(e,t,m),this._scene.needsPreviousWorldMatrices&&!M&&this._instanceDataStorage.manualUpdate&&(!this._instanceDataStorage.isFrozen||this._instanceDataStorage.forceMatrixUpdates)&&!this._instanceDataStorage.previousManualUpdate&&u.updateDirectly(l.instancesData,0,m),r.unbindInstanceAttributes(),this}_renderWithThinInstances(e,t,s,i){var r,a;let n=null!==(a=null===(r=this._thinInstanceDataStorage)||void 0===r?void 0:r.instancesCount)&&void 0!==a?a:0;this.getScene()._activeIndices.addCount(e.indexCount*n,!1),i._currentDrawContext&&(i._currentDrawContext.useInstancing=!0),this._bind(e,s,t),this._draw(e,t,n),this._scene.needsPreviousWorldMatrices&&!this._thinInstanceDataStorage.previousMatrixData&&this._thinInstanceDataStorage.matrixData&&(this._thinInstanceDataStorage.previousMatrixBuffer?this._thinInstanceDataStorage.previousMatrixBuffer.updateDirectly(this._thinInstanceDataStorage.matrixData,0,n):this._thinInstanceDataStorage.previousMatrixBuffer=this._thinInstanceCreateMatrixBuffer("previousWorld",this._thinInstanceDataStorage.matrixData,!1)),i.unbindInstanceAttributes()}_processInstancedBuffers(e,t){}_processRendering(e,t,s,i,r,a,n,o){let l=this.getScene(),h=l.getEngine();if(i=this._getRenderingFillMode(i),a&&t.getRenderingMesh().hasThinInstances)return this._renderWithThinInstances(t,i,s,h),this;if(a)this._renderWithInstances(t,i,r,s,h);else{h._currentDrawContext&&(h._currentDrawContext.useInstancing=!1);let s=0;r.renderSelf[t._id]&&(n&&n(!1,e.getWorldMatrix(),o),s++,this._draw(t,i,this._instanceDataStorage.overridenInstanceCount));let a=r.visibleInstances[t._id];if(a){let e=a.length;s+=e;for(let s=0;s<e;s++){let e=a[s],r=e.getWorldMatrix();n&&n(!0,r,o),this._draw(t,i)}}l._activeIndices.addCount(t.indexCount*s,!1)}return this}_rebuild(e=!1){if(this._instanceDataStorage.instancesBuffer&&(e&&this._instanceDataStorage.instancesBuffer.dispose(),this._instanceDataStorage.instancesBuffer=null),this._userInstancedBuffersStorage){for(let t in this._userInstancedBuffersStorage.vertexBuffers){let s=this._userInstancedBuffersStorage.vertexBuffers[t];s&&(e&&s.dispose(),this._userInstancedBuffersStorage.vertexBuffers[t]=null)}this._userInstancedBuffersStorage.vertexArrayObjects&&(this._userInstancedBuffersStorage.vertexArrayObjects={})}this._internalMeshDataInfo._effectiveMaterial=null,super._rebuild(e)}_freeze(){if(this.subMeshes){for(let e=0;e<this.subMeshes.length;e++)this._getInstancesRenderList(e);this._internalMeshDataInfo._effectiveMaterial=null,this._instanceDataStorage.isFrozen=!0}}_unFreeze(){this._instanceDataStorage.isFrozen=!1,this._instanceDataStorage.previousBatch=null}render(e,t,s){var i,r,a;let n,o;let l=this.getScene();if(this._internalAbstractMeshDataInfo._isActiveIntermediate?this._internalAbstractMeshDataInfo._isActiveIntermediate=!1:this._internalAbstractMeshDataInfo._isActive=!1,this._checkOcclusionQuery()&&!this._occlusionDataStorage.forceRenderingWhenOccluded)return this;let d=this._getInstancesRenderList(e._id,!!s);if(d.mustReturn||!this._geometry||!this._geometry.getVertexBuffers()||!this._unIndexed&&!this._geometry.getIndexBuffer())return this;let c=l.getEngine(),u=0,f=null;this.ignoreCameraMaxZ&&l.activeCamera&&!l._isInIntermediateRendering()&&(u=l.activeCamera.maxZ,f=l.activeCamera,l.activeCamera.maxZ=0,l.updateTransformMatrix(!0)),this._internalMeshDataInfo._onBeforeRenderObservable&&this._internalMeshDataInfo._onBeforeRenderObservable.notifyObservers(this);let g=e.getRenderingMesh(),_=d.hardwareInstancedRendering[e._id]||g.hasThinInstances||!!this._userInstancedBuffersStorage&&!e.getMesh()._internalAbstractMeshDataInfo._actAsRegularMesh,m=this._instanceDataStorage,I=e.getMaterial();if(!I)return f&&(f.maxZ=u,l.updateTransformMatrix(!0)),this;if(m.isFrozen&&this._internalMeshDataInfo._effectiveMaterial&&this._internalMeshDataInfo._effectiveMaterial===I){if(I._storeEffectOnSubMeshes&&!(null===(i=e.effect)||void 0===i?void 0:i._wasPreviouslyReady)||!I._storeEffectOnSubMeshes&&!(null===(r=I.getEffect())||void 0===r?void 0:r._wasPreviouslyReady))return f&&(f.maxZ=u,l.updateTransformMatrix(!0)),this}else{if(I._storeEffectOnSubMeshes){if(!I.isReadyForSubMesh(this,e,_))return f&&(f.maxZ=u,l.updateTransformMatrix(!0)),this}else if(!I.isReady(this,_))return f&&(f.maxZ=u,l.updateTransformMatrix(!0)),this;this._internalMeshDataInfo._effectiveMaterial=I}t&&c.setAlphaMode(this._internalMeshDataInfo._effectiveMaterial.alphaMode),n=this._internalMeshDataInfo._effectiveMaterial._storeEffectOnSubMeshes?e._drawWrapper:this._internalMeshDataInfo._effectiveMaterial._getDrawWrapper();let p=null!==(a=null==n?void 0:n.effect)&&void 0!==a?a:null;for(let t of l._beforeRenderingMeshStage)t.action(this,e,d,p);if(!n||!p)return f&&(f.maxZ=u,l.updateTransformMatrix(!0)),this;let v=s||this;if(!m.isFrozen&&(this._internalMeshDataInfo._effectiveMaterial.backFaceCulling||null!==this.overrideMaterialSideOrientation)){let e=v._getWorldMatrixDeterminant();null==(o=this.overrideMaterialSideOrientation)&&(o=this._internalMeshDataInfo._effectiveMaterial.sideOrientation),e<0&&(o=o===M.F.ClockWiseSideOrientation?M.F.CounterClockWiseSideOrientation:M.F.ClockWiseSideOrientation),m.sideOrientation=o}else o=m.sideOrientation;let D=this._internalMeshDataInfo._effectiveMaterial._preBind(n,o);this._internalMeshDataInfo._effectiveMaterial.forceDepthWrite&&c.setDepthWrite(!0);let y=this._internalMeshDataInfo._effectiveMaterial,b=y.fillMode;this._internalMeshDataInfo._onBeforeBindObservable&&this._internalMeshDataInfo._onBeforeBindObservable.notifyObservers(this),_||this._bind(e,p,b,!1);let S=v.getWorldMatrix();for(let t of(y._storeEffectOnSubMeshes?y.bindForSubMesh(S,this,e):y.bind(S,this),!y.backFaceCulling&&y.separateCullingPass&&(c.setState(!0,y.zOffset,!1,!D,y.cullBackFaces,y.stencil,y.zOffsetUnits),this._processRendering(this,e,p,b,d,_,this._onBeforeDraw,this._internalMeshDataInfo._effectiveMaterial),c.setState(!0,y.zOffset,!1,D,y.cullBackFaces,y.stencil,y.zOffsetUnits),this._internalMeshDataInfo._onBetweenPassObservable&&this._internalMeshDataInfo._onBetweenPassObservable.notifyObservers(e)),this._processRendering(this,e,p,b,d,_,this._onBeforeDraw,this._internalMeshDataInfo._effectiveMaterial),this._internalMeshDataInfo._effectiveMaterial.unbind(),l._afterRenderingMeshStage))t.action(this,e,d,p);return this._internalMeshDataInfo._onAfterRenderObservable&&this._internalMeshDataInfo._onAfterRenderObservable.notifyObservers(this),f&&(f.maxZ=u,l.updateTransformMatrix(!0)),l.performancePriority!==h.a.Aggressive||m.isFrozen||this._freeze(),this}cleanMatrixWeights(){this.isVerticesDataPresent(f.o.MatricesWeightsKind)&&(this.isVerticesDataPresent(f.o.MatricesWeightsExtraKind)?this._normalizeSkinWeightsAndExtra():this._normalizeSkinFourWeights())}_normalizeSkinFourWeights(){let e=this.getVerticesData(f.o.MatricesWeightsKind),t=e.length;for(let s=0;s<t;s+=4){let t=e[s]+e[s+1]+e[s+2]+e[s+3];if(0===t)e[s]=1;else{let i=1/t;e[s]*=i,e[s+1]*=i,e[s+2]*=i,e[s+3]*=i}}this.setVerticesData(f.o.MatricesWeightsKind,e)}_normalizeSkinWeightsAndExtra(){let e=this.getVerticesData(f.o.MatricesWeightsExtraKind),t=this.getVerticesData(f.o.MatricesWeightsKind),s=t.length;for(let i=0;i<s;i+=4){let s=t[i]+t[i+1]+t[i+2]+t[i+3];if(0===(s+=e[i]+e[i+1]+e[i+2]+e[i+3]))t[i]=1;else{let r=1/s;t[i]*=r,t[i+1]*=r,t[i+2]*=r,t[i+3]*=r,e[i]*=r,e[i+1]*=r,e[i+2]*=r,e[i+3]*=r}}this.setVerticesData(f.o.MatricesWeightsKind,t),this.setVerticesData(f.o.MatricesWeightsKind,e)}validateSkinning(){let e=this.getVerticesData(f.o.MatricesWeightsExtraKind),t=this.getVerticesData(f.o.MatricesWeightsKind);if(null===t||null==this.skeleton)return{skinned:!1,valid:!0,report:"not skinned"};let s=t.length,i=0,r=0,a=0,n=0,o=null===e?4:8,l=[];for(let e=0;e<=o;e++)l[e]=0;for(let h=0;h<s;h+=4){let s=t[h],d=s,c=0===d?0:1;for(let r=1;r<o;r++){let a=r<4?t[h+r]:e[h+r-4];a>s&&i++,0!==a&&c++,d+=a,s=a}if(l[c]++,c>a&&(a=c),0===d)r++;else{let s=1/d,i=0;for(let r=0;r<o;r++)r<4?i+=Math.abs(t[h+r]-t[h+r]*s):i+=Math.abs(e[h+r-4]-e[h+r-4]*s);i>.001&&n++}}let h=this.skeleton.bones.length,d=this.getVerticesData(f.o.MatricesIndicesKind),c=this.getVerticesData(f.o.MatricesIndicesExtraKind),u=0;for(let e=0;e<s;e+=4)for(let t=0;t<o;t++){let s=t<4?d[e+t]:c[e+t-4];(s>=h||s<0)&&u++}let g="Number of Weights = "+s/4+"\nMaximum influences = "+a+"\nMissing Weights = "+r+"\nNot Sorted = "+i+"\nNot Normalized = "+n+"\nWeightCounts = ["+l+"]\nNumber of bones = "+h+"\nBad Bone Indices = "+u;return{skinned:!0,valid:0===r&&0===n&&0===u,report:g}}_checkDelayState(){let e=this.getScene();return this._geometry?this._geometry.load(e):4===this.delayLoadState&&(this.delayLoadState=2,this._queueLoad(e)),this}_queueLoad(e){e.addPendingData(this);let t=-1!==this.delayLoadingFile.indexOf(".babylonbinarymeshdata");return r.w1.LoadFile(this.delayLoadingFile,t=>{t instanceof ArrayBuffer?this._delayLoadingFunction(t,this):this._delayLoadingFunction(JSON.parse(t),this),this.instances.forEach(e=>{e.refreshBoundingInfo(),e._syncSubMeshes()}),this.delayLoadState=1,e.removePendingData(this)},()=>{},e.offlineProvider,t),this}isInFrustum(e){return!!(2!==this.delayLoadState&&super.isInFrustum(e))&&(this._checkDelayState(),!0)}setMaterialById(e){let t;let s=this.getScene().materials;for(t=s.length-1;t>-1;t--)if(s[t].id===e)return this.material=s[t],this;let i=this.getScene().multiMaterials;for(t=i.length-1;t>-1;t--)if(i[t].id===e){this.material=i[t];break}return this}getAnimatables(){let e=[];return this.material&&e.push(this.material),this.skeleton&&e.push(this.skeleton),e}bakeTransformIntoVertices(e){let t;if(!this.isVerticesDataPresent(f.o.PositionKind))return this;let s=this.subMeshes.splice(0);this._resetPointsArrayCache();let i=this.getVerticesData(f.o.PositionKind),r=d.P.Zero();for(t=0;t<i.length;t+=3)d.P.TransformCoordinatesFromFloatsToRef(i[t],i[t+1],i[t+2],e,r).toArray(i,t);if(this.setVerticesData(f.o.PositionKind,i,this.getVertexBuffer(f.o.PositionKind).isUpdatable()),this.isVerticesDataPresent(f.o.NormalKind)){for(t=0,i=this.getVerticesData(f.o.NormalKind);t<i.length;t+=3)d.P.TransformNormalFromFloatsToRef(i[t],i[t+1],i[t+2],e,r).normalize().toArray(i,t);this.setVerticesData(f.o.NormalKind,i,this.getVertexBuffer(f.o.NormalKind).isUpdatable())}return 0>e.determinant()&&this.flipFaces(),this.releaseSubMeshes(),this.subMeshes=s,this}bakeCurrentTransformIntoVertices(e=!0){return this.bakeTransformIntoVertices(this.computeWorldMatrix(!0)),this.resetLocalMatrix(e),this}get _positions(){return this._internalAbstractMeshDataInfo._positions?this._internalAbstractMeshDataInfo._positions:this._geometry?this._geometry._positions:null}_resetPointsArrayCache(){return this._geometry&&this._geometry._resetPointsArrayCache(),this}_generatePointsArray(){return!!this._geometry&&this._geometry._generatePointsArray()}clone(e="",t=null,s,i=!0){return new T(e,this.getScene(),t,this,s,i)}dispose(e,t=!1){this.morphTargetManager=null,this._geometry&&this._geometry.releaseForMesh(this,!0);let s=this._internalMeshDataInfo;if(s._onBeforeDrawObservable&&s._onBeforeDrawObservable.clear(),s._onBeforeBindObservable&&s._onBeforeBindObservable.clear(),s._onBeforeRenderObservable&&s._onBeforeRenderObservable.clear(),s._onAfterRenderObservable&&s._onAfterRenderObservable.clear(),s._onBetweenPassObservable&&s._onBetweenPassObservable.clear(),this._scene.useClonedMeshMap){if(s.meshMap)for(let e in s.meshMap){let t=s.meshMap[e];t&&(t._internalMeshDataInfo._source=null,s.meshMap[e]=void 0)}s._source&&s._source._internalMeshDataInfo.meshMap&&(s._source._internalMeshDataInfo.meshMap[this.uniqueId]=void 0)}else{let e=this.getScene().meshes;for(let t of e){let e=t;e._internalMeshDataInfo&&e._internalMeshDataInfo._source&&e._internalMeshDataInfo._source===this&&(e._internalMeshDataInfo._source=null)}}s._source=null,this._instanceDataStorage.visibleInstances={},this._disposeInstanceSpecificData(),this._disposeThinInstanceSpecificData(),this._internalMeshDataInfo._checkReadinessObserver&&this._scene.onBeforeRenderObservable.remove(this._internalMeshDataInfo._checkReadinessObserver),super.dispose(e,t)}_disposeInstanceSpecificData(){}_disposeThinInstanceSpecificData(){}_invalidateInstanceVertexArrayObject(){}applyDisplacementMap(e,t,s,i,a,n,o=!1){let l=this.getScene(),h=e=>{let r=e.width,l=e.height,h=this.getEngine().createCanvas(r,l),d=h.getContext("2d");d.drawImage(e,0,0);let c=d.getImageData(0,0,r,l).data;this.applyDisplacementMapFromBuffer(c,r,l,t,s,a,n,o),i&&i(this)};return r.w1.LoadImage(e,h,()=>{},l.offlineProvider),this}applyDisplacementMapFromBuffer(e,t,s,i,r,a,n,o=!1){if(!this.isVerticesDataPresent(f.o.PositionKind)||!this.isVerticesDataPresent(f.o.NormalKind)||!this.isVerticesDataPresent(f.o.UVKind))return y.Y.Warn("Cannot call applyDisplacementMap: Given mesh is not complete. Position, Normal or UV are missing"),this;let l=this.getVerticesData(f.o.PositionKind,!0,!0),h=this.getVerticesData(f.o.NormalKind),c=this.getVerticesData(f.o.UVKind),u=d.P.Zero(),_=d.P.Zero(),m=d.FM.Zero();a=a||d.FM.Zero(),n=n||new d.FM(1,1);for(let o=0;o<l.length;o+=3){d.P.FromArrayToRef(l,o,u),d.P.FromArrayToRef(h,o,_),d.FM.FromArrayToRef(c,o/3*2,m);let f=Math.abs(m.x*n.x+a.x%1)*(t-1)%t|0,g=Math.abs(m.y*n.y+a.y%1)*(s-1)%s|0,I=(f+g*t)*4,M=e[I]/255,p=e[I+1]/255,v=e[I+2]/255,D=.3*M+.59*p+.11*v;_.normalize(),_.scaleInPlace(i+(r-i)*D),(u=u.add(_)).toArray(l,o)}return g.x.ComputeNormals(l,this.getIndices(),h),o?(this.setVerticesData(f.o.PositionKind,l),this.setVerticesData(f.o.NormalKind,h),this.setVerticesData(f.o.UVKind,c)):(this.updateVerticesData(f.o.PositionKind,l),this.updateVerticesData(f.o.NormalKind,h)),this}convertToFlatShadedMesh(){let e,t,s,i;let r=this.getVerticesDataKinds(),a={},n={},o={},l=!1;for(e=0;e<r.length;e++){t=r[e];let s=this.getVertexBuffer(t),i=s.getData();if(!(i instanceof Array||i instanceof Float32Array)||0!==i.length){if(t===f.o.NormalKind){l=s.isUpdatable(),r.splice(e,1),e--;continue}a[t]=s,n[t]=this.getVerticesData(t),o[t]=[]}}let h=this.subMeshes.slice(0),c=this.getIndices(),u=this.getTotalIndices();for(s=0;s<u;s++){let i=c[s];for(e=0;e<r.length;e++){if(!a[t=r[e]])continue;let s=a[t].getStrideSize();for(let e=0;e<s;e++)o[t].push(n[t][i*s+e])}}let g=[],_=o[f.o.PositionKind],m=this.getScene().useRightHandedSystem;for(s=0,i=m?1===this.overrideMaterialSideOrientation:0===this.overrideMaterialSideOrientation;s<u;s+=3){c[s]=s,c[s+1]=s+1,c[s+2]=s+2;let e=d.P.FromArray(_,3*s),t=d.P.FromArray(_,(s+1)*3),r=d.P.FromArray(_,(s+2)*3),a=e.subtract(t),n=r.subtract(t),o=d.P.Normalize(d.P.Cross(a,n));i&&o.scaleInPlace(-1);for(let e=0;e<3;e++)g.push(o.x),g.push(o.y),g.push(o.z)}for(this.setIndices(c),this.setVerticesData(f.o.NormalKind,g,l),e=0;e<r.length;e++)o[t=r[e]]&&this.setVerticesData(t,o[t],a[t].isUpdatable());this.releaseSubMeshes();for(let e=0;e<h.length;e++){let t=h[e];I.P.AddToMesh(t.materialIndex,t.indexStart,t.indexCount,t.indexStart,t.indexCount,this)}return this.synchronizeInstances(),this}convertToUnIndexedMesh(){let e,t,s;let i=this.getVerticesDataKinds(),r={},a={},n={};for(e=0;e<i.length;e++){t=i[e];let s=this.getVertexBuffer(t);r[t]=s,a[t]=r[t].getData(),n[t]=[]}let o=this.subMeshes.slice(0),l=this.getIndices(),h=this.getTotalIndices();for(s=0;s<h;s++){let o=l[s];for(e=0;e<i.length;e++){t=i[e];let s=r[t].getStrideSize();for(let e=0;e<s;e++)n[t].push(a[t][o*s+e])}}for(s=0;s<h;s+=3)l[s]=s,l[s+1]=s+1,l[s+2]=s+2;for(this.setIndices(l),e=0;e<i.length;e++)t=i[e],this.setVerticesData(t,n[t],r[t].isUpdatable(),r[t].getStrideSize());this.releaseSubMeshes();for(let e=0;e<o.length;e++){let t=o[e];I.P.AddToMesh(t.materialIndex,t.indexStart,t.indexCount,t.indexStart,t.indexCount,this)}return this._unIndexed=!0,this.synchronizeInstances(),this}flipFaces(e=!1){let t;let s=g.x.ExtractFromMesh(this);if(e&&this.isVerticesDataPresent(f.o.NormalKind)&&s.normals)for(t=0;t<s.normals.length;t++)s.normals[t]*=-1;if(s.indices){let e;for(t=0;t<s.indices.length;t+=3)e=s.indices[t+1],s.indices[t+1]=s.indices[t+2],s.indices[t+2]=e}return s.applyToMesh(this,this.isVertexBufferUpdatable(f.o.PositionKind)),this}increaseVertices(e=1){let t=g.x.ExtractFromMesh(this),s=t.indices&&!Array.isArray(t.indices)&&Array.from?Array.from(t.indices):t.indices,i=t.positions&&!Array.isArray(t.positions)&&Array.from?Array.from(t.positions):t.positions,r=t.uvs&&!Array.isArray(t.uvs)&&Array.from?Array.from(t.uvs):t.uvs,a=t.normals&&!Array.isArray(t.normals)&&Array.from?Array.from(t.normals):t.normals;if(s&&i){let n,o,l,h,c;t.indices=s,t.positions=i,r&&(t.uvs=r),a&&(t.normals=a);let u=e+1,g=[];for(let e=0;e<u+1;e++)g[e]=[];let _=new d.P(0,0,0),m=new d.P(0,0,0),I=new d.FM(0,0),M=[],p=[],v=[],D=i.length;r&&(h=r.length),a&&(c=a.length);for(let e=0;e<s.length;e+=3){p[0]=s[e],p[1]=s[e+1],p[2]=s[e+2];for(let e=0;e<3;e++)if(n=p[e],o=p[(e+1)%3],void 0===v[n]&&void 0===v[o]?(v[n]=[],v[o]=[]):(void 0===v[n]&&(v[n]=[]),void 0===v[o]&&(v[o]=[])),void 0===v[n][o]&&void 0===v[o][n]){v[n][o]=[],_.x=(i[3*o]-i[3*n])/u,_.y=(i[3*o+1]-i[3*n+1])/u,_.z=(i[3*o+2]-i[3*n+2])/u,a&&(m.x=(a[3*o]-a[3*n])/u,m.y=(a[3*o+1]-a[3*n+1])/u,m.z=(a[3*o+2]-a[3*n+2])/u),r&&(I.x=(r[2*o]-r[2*n])/u,I.y=(r[2*o+1]-r[2*n+1])/u),v[n][o].push(n);for(let e=1;e<u;e++)v[n][o].push(i.length/3),i[D++]=i[3*n]+e*_.x,i[D++]=i[3*n+1]+e*_.y,i[D++]=i[3*n+2]+e*_.z,a&&(a[c++]=a[3*n]+e*m.x,a[c++]=a[3*n+1]+e*m.y,a[c++]=a[3*n+2]+e*m.z),r&&(r[h++]=r[2*n]+e*I.x,r[h++]=r[2*n+1]+e*I.y);v[n][o].push(o),v[o][n]=[],l=v[n][o].length;for(let e=0;e<l;e++)v[o][n][e]=v[n][o][l-1-e]}g[0][0]=s[e],g[1][0]=v[s[e]][s[e+1]][1],g[1][1]=v[s[e]][s[e+2]][1];for(let t=2;t<u;t++){g[t][0]=v[s[e]][s[e+1]][t],g[t][t]=v[s[e]][s[e+2]][t],_.x=(i[3*g[t][t]]-i[3*g[t][0]])/t,_.y=(i[3*g[t][t]+1]-i[3*g[t][0]+1])/t,_.z=(i[3*g[t][t]+2]-i[3*g[t][0]+2])/t,a&&(m.x=(a[3*g[t][t]]-a[3*g[t][0]])/t,m.y=(a[3*g[t][t]+1]-a[3*g[t][0]+1])/t,m.z=(a[3*g[t][t]+2]-a[3*g[t][0]+2])/t),r&&(I.x=(r[2*g[t][t]]-r[2*g[t][0]])/t,I.y=(r[2*g[t][t]+1]-r[2*g[t][0]+1])/t);for(let e=1;e<t;e++)g[t][e]=i.length/3,i[D++]=i[3*g[t][0]]+e*_.x,i[D++]=i[3*g[t][0]+1]+e*_.y,i[D++]=i[3*g[t][0]+2]+e*_.z,a&&(a[c++]=a[3*g[t][0]]+e*m.x,a[c++]=a[3*g[t][0]+1]+e*m.y,a[c++]=a[3*g[t][0]+2]+e*m.z),r&&(r[h++]=r[2*g[t][0]]+e*I.x,r[h++]=r[2*g[t][0]+1]+e*I.y)}g[u]=v[s[e+1]][s[e+2]],M.push(g[0][0],g[1][0],g[1][1]);for(let e=1;e<u;e++){let t;for(t=0;t<e;t++)M.push(g[e][t],g[e+1][t],g[e+1][t+1]),M.push(g[e][t],g[e+1][t+1],g[e][t+1]);M.push(g[e][t],g[e+1][t],g[e+1][t+1])}}t.indices=M,t.applyToMesh(this,this.isVertexBufferUpdatable(f.o.PositionKind))}else y.Y.Warn("Couldn't increase number of vertices : VertexData must contain at least indices and positions")}forceSharedVertices(){let e=g.x.ExtractFromMesh(this),t=e.uvs,s=e.indices,i=e.positions,r=e.colors,a=e.matricesIndices,n=e.matricesWeights,o=e.matricesIndicesExtra,l=e.matricesWeightsExtra;if(void 0===s||void 0===i||null===s||null===i)y.Y.Warn("VertexData contains empty entries");else{let h,d;let c=[],u=[],_=[],m=[],I=[],M=[],p=[],v=[],D=[],y=0,b={};for(let e=0;e<s.length;e+=3){d=[s[e],s[e+1],s[e+2]],D=[];for(let e=0;e<3;e++){D[e]="";for(let t=0;t<3;t++)1e-8>Math.abs(i[3*d[e]+t])&&(i[3*d[e]+t]=0),D[e]+=i[3*d[e]+t]+"|"}if(!(D[0]==D[1]||D[0]==D[2]||D[1]==D[2]))for(let e=0;e<3;e++){if(void 0===(h=b[D[e]])){b[D[e]]=y,h=y++;for(let t=0;t<3;t++)c.push(i[3*d[e]+t]);if(null!=r)for(let t=0;t<4;t++)m.push(r[4*d[e]+t]);if(null!=t)for(let s=0;s<2;s++)_.push(t[2*d[e]+s]);if(null!=a)for(let t=0;t<4;t++)I.push(a[4*d[e]+t]);if(null!=n)for(let t=0;t<4;t++)M.push(n[4*d[e]+t]);if(null!=o)for(let t=0;t<4;t++)p.push(o[4*d[e]+t]);if(null!=l)for(let t=0;t<4;t++)v.push(l[4*d[e]+t])}u.push(h)}}let S=[];g.x.ComputeNormals(c,u,S),e.positions=c,e.indices=u,e.normals=S,null!=t&&(e.uvs=_),null!=r&&(e.colors=m),null!=a&&(e.matricesIndices=I),null!=n&&(e.matricesWeights=M),null!=o&&(e.matricesIndicesExtra=p),null!=n&&(e.matricesWeightsExtra=v),e.applyToMesh(this,this.isVertexBufferUpdatable(f.o.PositionKind))}}static _instancedMeshFactory(e,t){throw(0,S.S)("InstancedMesh")}static _PhysicsImpostorParser(e,t,s){throw(0,S.S)("PhysicsImpostor")}createInstance(e){return T._instancedMeshFactory(e,this)}synchronizeInstances(){for(let e=0;e<this.instances.length;e++){let t=this.instances[e];t._syncSubMeshes()}return this}optimizeIndices(e){let t=this.getIndices(),s=this.getVerticesData(f.o.PositionKind);if(!s||!t)return this;let i=[];for(let e=0;e<s.length;e+=3)i.push(d.P.FromArray(s,e));let a=[];return r.$g.SyncAsyncForLoop(i.length,40,e=>{let t=i.length-1-e,s=i[t];for(let e=0;e<t;++e){let r=i[e];if(s.equals(r)){a[t]=e;break}}},()=>{for(let e=0;e<t.length;++e)t[e]=a[t[e]]||t[e];let s=this.subMeshes.slice(0);this.setIndices(t),this.subMeshes=s,e&&e(this)}),this}serialize(e={}){e.name=this.name,e.id=this.id,e.uniqueId=this.uniqueId,e.type=this.getClassName(),n.$&&n.$.HasTags(this)&&(e.tags=n.$.GetTags(this)),e.position=this.position.asArray(),this.rotationQuaternion?e.rotationQuaternion=this.rotationQuaternion.asArray():this.rotation&&(e.rotation=this.rotation.asArray()),e.scaling=this.scaling.asArray(),this._postMultiplyPivotMatrix?e.pivotMatrix=this.getPivotMatrix().asArray():e.localMatrix=this.getPivotMatrix().asArray(),e.isEnabled=this.isEnabled(!1),e.isVisible=this.isVisible,e.infiniteDistance=this.infiniteDistance,e.pickable=this.isPickable,e.receiveShadows=this.receiveShadows,e.billboardMode=this.billboardMode,e.visibility=this.visibility,e.checkCollisions=this.checkCollisions,e.isBlocker=this.isBlocker,e.overrideMaterialSideOrientation=this.overrideMaterialSideOrientation,this.parent&&this.parent._serializeAsParent(e),e.isUnIndexed=this.isUnIndexed;let t=this._geometry;if(t&&this.subMeshes){e.geometryUniqueId=t.uniqueId,e.geometryId=t.id,e.subMeshes=[];for(let t=0;t<this.subMeshes.length;t++){let s=this.subMeshes[t];e.subMeshes.push({materialIndex:s.materialIndex,verticesStart:s.verticesStart,verticesCount:s.verticesCount,indexStart:s.indexStart,indexCount:s.indexCount})}}if(this.material?this.material.doNotSerialize||(e.materialUniqueId=this.material.uniqueId,e.materialId=this.material.id):(this.material=null,e.materialUniqueId=this._scene.defaultMaterial.uniqueId,e.materialId=this._scene.defaultMaterial.id),this.morphTargetManager&&(e.morphTargetManagerId=this.morphTargetManager.uniqueId),this.skeleton&&(e.skeletonId=this.skeleton.id,e.numBoneInfluencers=this.numBoneInfluencers),this.getScene()._getComponent(x.l.NAME_PHYSICSENGINE)){let t=this.getPhysicsImpostor();t&&(e.physicsMass=t.getParam("mass"),e.physicsFriction=t.getParam("friction"),e.physicsRestitution=t.getParam("mass"),e.physicsImpostor=t.type)}this.metadata&&(e.metadata=this.metadata),e.instances=[];for(let t=0;t<this.instances.length;t++){let s=this.instances[t];if(s.doNotSerialize)continue;let i={name:s.name,id:s.id,isEnabled:s.isEnabled(!1),isVisible:s.isVisible,isPickable:s.isPickable,checkCollisions:s.checkCollisions,position:s.position.asArray(),scaling:s.scaling.asArray()};if(s.parent&&s.parent._serializeAsParent(i),s.rotationQuaternion?i.rotationQuaternion=s.rotationQuaternion.asArray():s.rotation&&(i.rotation=s.rotation.asArray()),this.getScene()._getComponent(x.l.NAME_PHYSICSENGINE)){let e=s.getPhysicsImpostor();e&&(i.physicsMass=e.getParam("mass"),i.physicsFriction=e.getParam("friction"),i.physicsRestitution=e.getParam("mass"),i.physicsImpostor=e.type)}s.metadata&&(i.metadata=s.metadata),s.actionManager&&(i.actions=s.actionManager.serialize(s.name)),e.instances.push(i),D.p4.AppendSerializedAnimations(s,i),i.ranges=s.serializeAnimationRanges()}if(this._thinInstanceDataStorage.instancesCount&&this._thinInstanceDataStorage.matrixData&&(e.thinInstances={instancesCount:this._thinInstanceDataStorage.instancesCount,matrixData:Array.from(this._thinInstanceDataStorage.matrixData),matrixBufferSize:this._thinInstanceDataStorage.matrixBufferSize,enablePicking:this.thinInstanceEnablePicking},this._userThinInstanceBuffersStorage)){let t={data:{},sizes:{},strides:{}};for(let e in this._userThinInstanceBuffersStorage.data)t.data[e]=Array.from(this._userThinInstanceBuffersStorage.data[e]),t.sizes[e]=this._userThinInstanceBuffersStorage.sizes[e],t.strides[e]=this._userThinInstanceBuffersStorage.strides[e];e.thinInstances.userThinInstance=t}return D.p4.AppendSerializedAnimations(this,e),e.ranges=this.serializeAnimationRanges(),e.layerMask=this.layerMask,e.alphaIndex=this.alphaIndex,e.hasVertexAlpha=this.hasVertexAlpha,e.overlayAlpha=this.overlayAlpha,e.overlayColor=this.overlayColor.asArray(),e.renderOverlay=this.renderOverlay,e.applyFog=this.applyFog,this.actionManager&&(e.actions=this.actionManager.serialize(this.name)),e}_syncGeometryWithMorphTargetManager(){if(!this.geometry)return;this._markSubMeshesAsAttributesDirty();let e=this._internalAbstractMeshDataInfo._morphTargetManager;if(e&&e.vertexCount){if(e.vertexCount!==this.getTotalVertices()){y.Y.Error("Mesh is incompatible with morph targets. Targets and mesh must all have the same vertices count."),this.morphTargetManager=null;return}if(e.isUsingTextureForTargets)return;for(let t=0;t<e.numInfluencers;t++){let s=e.getActiveTarget(t),i=s.getPositions();if(!i){y.Y.Error("Invalid morph target. Target must have positions.");return}this.geometry.setVerticesData(f.o.PositionKind+t,i,!1,3);let r=s.getNormals();r&&this.geometry.setVerticesData(f.o.NormalKind+t,r,!1,3);let a=s.getTangents();a&&this.geometry.setVerticesData(f.o.TangentKind+t,a,!1,3);let n=s.getUVs();n&&this.geometry.setVerticesData(f.o.UVKind+"_"+t,n,!1,2)}}else{let e=0;for(;this.geometry.isVerticesDataPresent(f.o.PositionKind+e);)this.geometry.removeVerticesData(f.o.PositionKind+e),this.geometry.isVerticesDataPresent(f.o.NormalKind+e)&&this.geometry.removeVerticesData(f.o.NormalKind+e),this.geometry.isVerticesDataPresent(f.o.TangentKind+e)&&this.geometry.removeVerticesData(f.o.TangentKind+e),this.geometry.isVerticesDataPresent(f.o.UVKind+e)&&this.geometry.removeVerticesData(f.o.UVKind+"_"+e),e++}}static Parse(e,t,s){let i;if((i=e.type&&"LinesMesh"===e.type?T._LinesMeshParser(e,t):e.type&&"GroundMesh"===e.type?T._GroundMeshParser(e,t):e.type&&"GoldbergMesh"===e.type?T._GoldbergMeshParser(e,t):new T(e.name,t)).id=e.id,i._waitingParsedUniqueId=e.uniqueId,n.$&&n.$.AddTagsTo(i,e.tags),i.position=d.P.FromArray(e.position),void 0!==e.metadata&&(i.metadata=e.metadata),e.rotationQuaternion?i.rotationQuaternion=d._f.FromArray(e.rotationQuaternion):e.rotation&&(i.rotation=d.P.FromArray(e.rotation)),i.scaling=d.P.FromArray(e.scaling),e.localMatrix?i.setPreTransformMatrix(d.y3.FromArray(e.localMatrix)):e.pivotMatrix&&i.setPivotMatrix(d.y3.FromArray(e.pivotMatrix)),i.setEnabled(e.isEnabled),i.isVisible=e.isVisible,i.infiniteDistance=e.infiniteDistance,i.showBoundingBox=e.showBoundingBox,i.showSubMeshesBoundingBox=e.showSubMeshesBoundingBox,void 0!==e.applyFog&&(i.applyFog=e.applyFog),void 0!==e.pickable&&(i.isPickable=e.pickable),void 0!==e.alphaIndex&&(i.alphaIndex=e.alphaIndex),i.receiveShadows=e.receiveShadows,void 0!==e.billboardMode&&(i.billboardMode=e.billboardMode),void 0!==e.visibility&&(i.visibility=e.visibility),i.checkCollisions=e.checkCollisions,i.overrideMaterialSideOrientation=e.overrideMaterialSideOrientation,void 0!==e.isBlocker&&(i.isBlocker=e.isBlocker),i._shouldGenerateFlatShading=e.useFlatShading,e.freezeWorldMatrix&&(i._waitingData.freezeWorldMatrix=e.freezeWorldMatrix),void 0!==e.parentId&&(i._waitingParentId=e.parentId),void 0!==e.parentInstanceIndex&&(i._waitingParentInstanceIndex=e.parentInstanceIndex),void 0!==e.actions&&(i._waitingData.actions=e.actions),void 0!==e.overlayAlpha&&(i.overlayAlpha=e.overlayAlpha),void 0!==e.overlayColor&&(i.overlayColor=c.Wo.FromArray(e.overlayColor)),void 0!==e.renderOverlay&&(i.renderOverlay=e.renderOverlay),i.isUnIndexed=!!e.isUnIndexed,i.hasVertexAlpha=e.hasVertexAlpha,e.delayLoadingFile?(i.delayLoadState=4,i.delayLoadingFile=s+e.delayLoadingFile,i.buildBoundingInfo(d.P.FromArray(e.boundingBoxMinimum),d.P.FromArray(e.boundingBoxMaximum)),e._binaryInfo&&(i._binaryInfo=e._binaryInfo),i._delayInfo=[],e.hasUVs&&i._delayInfo.push(f.o.UVKind),e.hasUVs2&&i._delayInfo.push(f.o.UV2Kind),e.hasUVs3&&i._delayInfo.push(f.o.UV3Kind),e.hasUVs4&&i._delayInfo.push(f.o.UV4Kind),e.hasUVs5&&i._delayInfo.push(f.o.UV5Kind),e.hasUVs6&&i._delayInfo.push(f.o.UV6Kind),e.hasColors&&i._delayInfo.push(f.o.ColorKind),e.hasMatricesIndices&&i._delayInfo.push(f.o.MatricesIndicesKind),e.hasMatricesWeights&&i._delayInfo.push(f.o.MatricesWeightsKind),i._delayLoadingFunction=_.Z._ImportGeometry,v.Z.ForceFullSceneLoadingForIncremental&&i._checkDelayState()):_.Z._ImportGeometry(e,i),e.materialUniqueId?i._waitingMaterialId=e.materialUniqueId:e.materialId&&(i._waitingMaterialId=e.materialId),e.morphTargetManagerId>-1&&(i.morphTargetManager=t.getMorphTargetManagerById(e.morphTargetManagerId)),void 0!==e.skeletonId&&null!==e.skeletonId&&(i.skeleton=t.getLastSkeletonById(e.skeletonId),e.numBoneInfluencers&&(i.numBoneInfluencers=e.numBoneInfluencers)),e.animations){for(let t=0;t<e.animations.length;t++){let s=e.animations[t],r=(0,b.q)("BABYLON.Animation");r&&i.animations.push(r.Parse(s))}u.N.ParseAnimationRanges(i,e,t)}if(e.autoAnimate&&t.beginAnimation(i,e.autoAnimateFrom,e.autoAnimateTo,e.autoAnimateLoop,e.autoAnimateSpeed||1),e.layerMask&&!isNaN(e.layerMask)?i.layerMask=Math.abs(parseInt(e.layerMask)):i.layerMask=268435455,e.physicsImpostor&&T._PhysicsImpostorParser(t,i,e),e.lodMeshIds&&(i._waitingData.lods={ids:e.lodMeshIds,distances:e.lodDistances?e.lodDistances:null,coverages:e.lodCoverages?e.lodCoverages:null}),e.instances)for(let s=0;s<e.instances.length;s++){let r=e.instances[s],a=i.createInstance(r.name);if(r.id&&(a.id=r.id),n.$&&(r.tags?n.$.AddTagsTo(a,r.tags):n.$.AddTagsTo(a,e.tags)),a.position=d.P.FromArray(r.position),void 0!==r.metadata&&(a.metadata=r.metadata),void 0!==r.parentId&&(a._waitingParentId=r.parentId),void 0!==r.parentInstanceIndex&&(a._waitingParentInstanceIndex=r.parentInstanceIndex),void 0!==r.isEnabled&&null!==r.isEnabled&&a.setEnabled(r.isEnabled),void 0!==r.isVisible&&null!==r.isVisible&&(a.isVisible=r.isVisible),void 0!==r.isPickable&&null!==r.isPickable&&(a.isPickable=r.isPickable),r.rotationQuaternion?a.rotationQuaternion=d._f.FromArray(r.rotationQuaternion):r.rotation&&(a.rotation=d.P.FromArray(r.rotation)),a.scaling=d.P.FromArray(r.scaling),void 0!=r.checkCollisions&&null!=r.checkCollisions&&(a.checkCollisions=r.checkCollisions),void 0!=r.pickable&&null!=r.pickable&&(a.isPickable=r.pickable),void 0!=r.showBoundingBox&&null!=r.showBoundingBox&&(a.showBoundingBox=r.showBoundingBox),void 0!=r.showSubMeshesBoundingBox&&null!=r.showSubMeshesBoundingBox&&(a.showSubMeshesBoundingBox=r.showSubMeshesBoundingBox),void 0!=r.alphaIndex&&null!=r.showSubMeshesBoundingBox&&(a.alphaIndex=r.alphaIndex),r.physicsImpostor&&T._PhysicsImpostorParser(t,a,r),void 0!==r.actions&&(a._waitingData.actions=r.actions),r.animations){for(let e=0;e<r.animations.length;e++){let t=r.animations[e],s=(0,b.q)("BABYLON.Animation");s&&a.animations.push(s.Parse(t))}u.N.ParseAnimationRanges(a,r,t),r.autoAnimate&&t.beginAnimation(a,r.autoAnimateFrom,r.autoAnimateTo,r.autoAnimateLoop,r.autoAnimateSpeed||1)}}if(e.thinInstances){let t=e.thinInstances;if(i.thinInstanceEnablePicking=!!t.enablePicking,t.matrixData?(i.thinInstanceSetBuffer("matrix",new Float32Array(t.matrixData),16,!1),i._thinInstanceDataStorage.matrixBufferSize=t.matrixBufferSize,i._thinInstanceDataStorage.instancesCount=t.instancesCount):i._thinInstanceDataStorage.matrixBufferSize=t.matrixBufferSize,e.thinInstances.userThinInstance){let t=e.thinInstances.userThinInstance;for(let e in t.data)i.thinInstanceSetBuffer(e,new Float32Array(t.data[e]),t.strides[e],!1),i._userThinInstanceBuffersStorage.sizes[e]=t.sizes[e]}}return i}setPositionsForCPUSkinning(){let e=this._internalMeshDataInfo;if(!e._sourcePositions){let t=this.getVerticesData(f.o.PositionKind);if(!t)return e._sourcePositions;e._sourcePositions=new Float32Array(t),this.isVertexBufferUpdatable(f.o.PositionKind)||this.setVerticesData(f.o.PositionKind,t,!0)}return e._sourcePositions}setNormalsForCPUSkinning(){let e=this._internalMeshDataInfo;if(!e._sourceNormals){let t=this.getVerticesData(f.o.NormalKind);if(!t)return e._sourceNormals;e._sourceNormals=new Float32Array(t),this.isVertexBufferUpdatable(f.o.NormalKind)||this.setVerticesData(f.o.NormalKind,t,!0)}return e._sourceNormals}applySkeleton(e){let t;if(!this.geometry||this.geometry._softwareSkinningFrameId==this.getScene().getFrameId()||(this.geometry._softwareSkinningFrameId=this.getScene().getFrameId(),!this.isVerticesDataPresent(f.o.PositionKind)||!this.isVerticesDataPresent(f.o.MatricesIndicesKind)||!this.isVerticesDataPresent(f.o.MatricesWeightsKind)))return this;let s=this.isVerticesDataPresent(f.o.NormalKind),i=this._internalMeshDataInfo;if(!i._sourcePositions){let e=this.subMeshes.slice();this.setPositionsForCPUSkinning(),this.subMeshes=e}s&&!i._sourceNormals&&this.setNormalsForCPUSkinning();let r=this.getVerticesData(f.o.PositionKind);if(!r)return this;r instanceof Float32Array||(r=new Float32Array(r));let a=this.getVerticesData(f.o.NormalKind);if(s){if(!a)return this;a instanceof Float32Array||(a=new Float32Array(a))}let n=this.getVerticesData(f.o.MatricesIndicesKind),o=this.getVerticesData(f.o.MatricesWeightsKind);if(!o||!n)return this;let l=this.numBoneInfluencers>4,h=l?this.getVerticesData(f.o.MatricesIndicesExtraKind):null,c=l?this.getVerticesData(f.o.MatricesWeightsExtraKind):null,u=e.getTransformMatrices(this),g=d.P.Zero(),_=new d.y3,m=new d.y3,I=0;for(let e=0;e<r.length;e+=3,I+=4){let f;for(t=0;t<4;t++)(f=o[I+t])>0&&(d.y3.FromFloat32ArrayToRefScaled(u,Math.floor(16*n[I+t]),f,m),_.addToSelf(m));if(l)for(t=0;t<4;t++)(f=c[I+t])>0&&(d.y3.FromFloat32ArrayToRefScaled(u,Math.floor(16*h[I+t]),f,m),_.addToSelf(m));d.P.TransformCoordinatesFromFloatsToRef(i._sourcePositions[e],i._sourcePositions[e+1],i._sourcePositions[e+2],_,g),g.toArray(r,e),s&&(d.P.TransformNormalFromFloatsToRef(i._sourceNormals[e],i._sourceNormals[e+1],i._sourceNormals[e+2],_,g),g.toArray(a,e)),_.reset()}return this.updateVerticesData(f.o.PositionKind,r),s&&this.updateVerticesData(f.o.NormalKind,a),this}static MinMax(e){let t=null,s=null;return(e.forEach(function(e){let i=e.getBoundingInfo(),r=i.boundingBox;t&&s?(t.minimizeInPlace(r.minimumWorld),s.maximizeInPlace(r.maximumWorld)):(t=r.minimumWorld,s=r.maximumWorld)}),t&&s)?{min:t,max:s}:{min:d.P.Zero(),max:d.P.Zero()}}static Center(e){let t=e instanceof Array?T.MinMax(e):e;return d.P.Center(t.min,t.max)}static MergeMeshes(e,t=!0,s,i,r,a){return(0,o.s3)(T._MergeMeshesCoroutine(e,t,s,i,r,a,!1))}static MergeMeshesAsync(e,t=!0,s,i,r,a){return(0,o.sM)(T._MergeMeshesCoroutine(e,t,s,i,r,a,!0),(0,o.KO)())}static*_MergeMeshesCoroutine(e,t=!0,s,i,r,a,n){let o;if(0===(e=e.filter(Boolean)).length)return null;if(!s){let t=0;for(o=0;o<e.length;o++)if((t+=e[o].getTotalVertices())>=65536)return y.Y.Warn("Cannot merge meshes because resulting mesh will have more than 65536 vertices. Please use allow32BitsIndices = true to use 32 bits indices"),null}a&&(r=!1);let l=[],h=[],d=[],c=e[0].overrideMaterialSideOrientation;for(o=0;o<e.length;o++){let t=e[o];if(t.isAnInstance)return y.Y.Warn("Cannot merge instance meshes."),null;if(c!==t.overrideMaterialSideOrientation)return y.Y.Warn("Cannot merge meshes with different overrideMaterialSideOrientation values."),null;if(r&&d.push(t.getTotalIndices()),a){if(t.material){let e=t.material;if(e instanceof p.G){for(let t=0;t<e.subMaterials.length;t++)0>l.indexOf(e.subMaterials[t])&&l.push(e.subMaterials[t]);for(let s=0;s<t.subMeshes.length;s++)h.push(l.indexOf(e.subMaterials[t.subMeshes[s].materialIndex])),d.push(t.subMeshes[s].indexCount)}else{0>l.indexOf(e)&&l.push(e);for(let s=0;s<t.subMeshes.length;s++)h.push(l.indexOf(e)),d.push(t.subMeshes[s].indexCount)}}else for(let e=0;e<t.subMeshes.length;e++)h.push(0),d.push(t.subMeshes[e].indexCount)}}let u=e[0],f=e=>{let t=e.computeWorldMatrix(!0),s=g.x.ExtractFromMesh(e,!1,!1);return{vertexData:s,transform:t}},{vertexData:_,transform:m}=f(u);n&&(yield);let M=Array(e.length-1);for(let t=1;t<e.length;t++)M[t-1]=f(e[t]),n&&(yield);let v=_._mergeCoroutine(m,M,s,n,!t),D=v.next();for(;!D.done;)n&&(yield),D=v.next();let b=D.value;i||(i=new T(u.name+"_merged",u.getScene()));let S=b._applyToCoroutine(i,void 0,n),x=S.next();for(;!x.done;)n&&(yield),x=S.next();if(i.checkCollisions=u.checkCollisions,i.overrideMaterialSideOrientation=u.overrideMaterialSideOrientation,t)for(o=0;o<e.length;o++)e[o].dispose();if(r||a){i.releaseSubMeshes(),o=0;let e=0;for(;o<d.length;)I.P.CreateFromIndices(0,e,d[o],i,void 0,!1),e+=d[o],o++;for(let e of i.subMeshes)e.refreshBoundingInfo();i.computeWorldMatrix(!0)}if(a){let e=new p.G(u.name+"_merged",u.getScene());e.subMaterials=l;for(let e=0;e<i.subMeshes.length;e++)i.subMeshes[e].materialIndex=h[e];i.material=e}else i.material=u.material;return i}addInstance(e){e._indexInSourceMeshInstanceArray=this.instances.length,this.instances.push(e)}removeInstance(e){let t=e._indexInSourceMeshInstanceArray;if(-1!=t){if(t!==this.instances.length-1){let e=this.instances[this.instances.length-1];this.instances[t]=e,e._indexInSourceMeshInstanceArray=t}e._indexInSourceMeshInstanceArray=-1,this.instances.pop()}}_shouldConvertRHS(){return this.overrideMaterialSideOrientation===M.F.CounterClockWiseSideOrientation}_getRenderingFillMode(e){var t;let s=this.getScene();return s.forcePointsCloud?M.F.PointFillMode:s.forceWireframe?M.F.WireFrameFillMode:null!==(t=this.overrideRenderingFillMode)&&void 0!==t?t:e}}T.FRONTSIDE=g.x.FRONTSIDE,T.BACKSIDE=g.x.BACKSIDE,T.DOUBLESIDE=g.x.DOUBLESIDE,T.DEFAULTSIDE=g.x.DEFAULTSIDE,T.NO_CAP=0,T.CAP_START=1,T.CAP_END=2,T.CAP_ALL=3,T.NO_FLIP=0,T.FLIP_TILE=1,T.ROTATE_TILE=2,T.FLIP_ROW=3,T.ROTATE_ROW=4,T.FLIP_N_ROTATE_TILE=5,T.FLIP_N_ROTATE_ROW=6,T.CENTER=0,T.LEFT=1,T.RIGHT=2,T.TOP=3,T.BOTTOM=4,T.INSTANCEDMESH_SORT_TRANSPARENT=!1,T._GroundMeshParser=(e,t)=>{throw(0,S.S)("GroundMesh")},T._GoldbergMeshParser=(e,t)=>{throw(0,S.S)("GoldbergMesh")},T._LinesMeshParser=(e,t)=>{throw(0,S.S)("LinesMesh")},(0,b.H)("BABYLON.Mesh",T),T.prototype.setMaterialByID=function(e){return this.setMaterialById(e)},T.CreateDisc=T.CreateDisc||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.CreateBox=T.CreateBox||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.CreateSphere=T.CreateSphere||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.CreateCylinder=T.CreateCylinder||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.CreateTorusKnot=T.CreateTorusKnot||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.CreateTorus=T.CreateTorus||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.CreatePlane=T.CreatePlane||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.CreateGround=T.CreateGround||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.CreateTiledGround=T.CreateTiledGround||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.CreateGroundFromHeightMap=T.CreateGroundFromHeightMap||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.CreateTube=T.CreateTube||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.CreatePolyhedron=T.CreatePolyhedron||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.CreateIcoSphere=T.CreateIcoSphere||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.CreateDecal=T.CreateDecal||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.CreateCapsule=T.CreateCapsule||(()=>{throw Error("Import MeshBuilder to populate this function")}),T.ExtendToGoldberg=T.ExtendToGoldberg||(()=>{throw Error("Import MeshBuilder to populate this function")})}}]);